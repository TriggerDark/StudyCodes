1. __all__：
        用于模块导入时的限制，只能导入等于号后面所赋予的函数名称
__all__ = ["函数名"]
2. __init__：
        初始化
3. __str__/__repr__:
        对象自动调用__str/repr__方法下return需要返回的值
        如自定义返回方法，需要对象手动调用
4. __self__:
        获取绑定的对象
5. __dict__:
        查看类或者实例对象特性
6. __new__:
        用于初始化对象
7. __del__:
        一个对象不被任何名称引用后，就无法在程序流程中继续被使用，就成了垃圾
    python会在适当时删除这个对象，来回收资源
        如果想在对象被删除时自行定义一些清除相关资源的操作，可以执行此方法
8. __eq__:
        判断两个对象是否相等
        注意：当类被functools下的total_ordering装饰时，必须实现
9. __ne__:
        与__eq__相对
10. __lt__:
        小于
11. __le__:
        小于等于
12. __gt__:
        大于
13. __ge__:
        大于等于
14. __mro__:
        可在04-多继承.py文件中查看用法
        只读属性
        Method Resolution Order:方法调用的顺序
15. __bases__:
        通过类的__bases__方法可以查看父类信息
        注意:可以通过改变__bases__来改变直接父类，
            从而使__mro__的内容发生变化

16. __get__:
17. __set__:

18. __next__/next():
        next(object)
        object.__next__
19. __iter__/iter():
        iter([10, 20, 30])
        ([10, 20, 30]).__iter__