package com.view;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;

import javax.swing.JPanel;

import com.model.Bullet;
import com.model.Enemy;
import com.model.Enemy01;
import com.model.Enemy02;
import com.model.Enemy03;
import com.model.Enemy04;
import com.model.Enemy05;
import com.model.Enemy06;
import com.model.Enemy07;
import com.model.Enemy08;
import com.model.Enemy09;
import com.model.Enemy10;
import com.model.Player;
import com.thread.DrawableThread;


public class MyPanel extends JPanel {
	
	private static final long serialVersionUID = 1L;
	public DrawableThread thread;
	public Player player;
	public ArrayList<Bullet> bullets = new ArrayList<Bullet>();
	public ArrayList<Enemy> enemies = new ArrayList<Enemy>();
	
	public Image bg;
	public int top = 0;
	public int timer = 0;
	public int enemyFlag;
	
	public MyPanel() {
		this.bg = Toolkit.getDefaultToolkit().getImage("src/images/bg01.jpg");
		this.player = new Player(this);
		this.thread = new DrawableThread(this);
		this.thread.start();
	}
	
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		this.timer ++;
		if(timer >= 10000) {
			timer = 0;
		}
		
		//»­±³¾°
		g.drawImage(bg, 0, top-bg.getHeight(this), bg.getWidth(this), bg.getHeight(this), null);
		g.drawImage(bg, 0, top, bg.getWidth(this), bg.getHeight(this), null);
		
		if(timer%10 == 0) {
			this.top += 1;
			if(top > bg.getHeight(this)) {
				top = 0;
			}
		}
		//»­·É»ú
		this.player.drawSelf(g);
		//»­×Óµ¯
		if(this.timer % 100 == 0) {
			Bullet b = new Bullet(this);
			b.x = (this.player.x + this.player.width/2 - b.width/2);
			b.y = this.player.y;
			this.bullets.add(b);
		}
		for(int i = 0; i < this.bullets.size(); ++ i) {
			this.bullets.get(i).drawSelf(g);
		}
		
		if(this.timer % 500 == 0) {
			this.enemyFlag = (int)(Math.random() * 10.0D + 1.0D);
			Enemy enemy = null;
			switch(this.enemyFlag) {
				case 1:
					enemy = new Enemy01(this);break;
				case 2:
					enemy = new Enemy02(this);break;
				case 3:
					enemy = new Enemy03(this);break;
				case 4:
					enemy = new Enemy04(this);break;
				case 5:
					enemy = new Enemy05(this);break;
				case 6:
					enemy = new Enemy06(this);break;
				case 7:
					enemy = new Enemy07(this);break;
				case 8:
					enemy = new Enemy08(this);break;
				case 9:
					enemy = new Enemy09(this);break;
				case 10:
					enemy = new Enemy10(this);break;
			}
			this.enemies.add(enemy);
		}
		for(int i = 0; i<this.enemies.size(); ++i) {
			this.enemies.get(i).drawSelf(g);
		}
		
		g.setColor(Color.WHITE);
		g.drawString((this.player.pointer).toString(), MainFrame.FrameWidth - 140, 15);
		
	}	
	
}
